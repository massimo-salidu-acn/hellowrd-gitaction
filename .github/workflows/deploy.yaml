name: Deployment

on:
  workflow_dispatch:
    inputs:
      environment_ref:
        required: false
        default: 'int'
        type: choice
        description: Deployment Environment
        options:
          - int
          - qa
          - prod
#    inputs:
#      version:
#        type: string
#        description: 'Dispatch: Docker image version/tag to use'
#        #required: true
  workflow_call:
    inputs:
      version:
        #required: true
        type: string
        description: 'Call: Docker image version/tag to use'
    outputs:
      testvar:
        description: "The first output string"
        value: ${{ jobs.deployment.outputs.testvar }}

env:
  IMAGE: 'europe-west4-docker.pkg.dev/mms-mwi-oms-integration-d-v001/doms-integration-dev/doms-masterdata-integration'
  mygit_ref: ${GITHUB_REF##*/}
  
jobs:
  deployment:
    name: 'Deployment'
    runs-on: ubuntu-latest
    outputs:
      testvar: 'variabile-test'
    steps:
      - name: Set environment variables
        run: |
          echo "...Version to deploy: ${{ inputs.version || 'xxx'}}"
          echo "...1 Git ref: ${{ github.head_ref }}"
          echo "...2 Git ref: ${{ github.ref }}"
          echo "...3 Git ref: ${GITHUB_REF##*/}"
          echo "...3.1 Git ref: ${GITHUB_REF##*/}"
          echo "...3.2 Git ref name: ${{ github.ref_name }}"
          echo "...4 Short sha: ${GITHUB_SHA::7}"
          echo "...5 Input Version or Git ref: ${{ inputs.version || github.ref }}"
          echo "...6 Input Version or Git ref: ${{ inputs.version || github.ref_name }}"
          REF="${{ github.ref_name }}"
          REF_NAME="${REF//-/_}"
          echo "VERSION=${REF_NAME}" >> $GITHUB_ENV
          echo "Version to deploy: ${REF_NAME}"

      - name: Set environment variables
        run: |
          echo "test env Version to deploy:${{ env.VERSION }}"

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: main
      
      - name: Create hotfix branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: "hotfix/${{ github.ref_name }}"
        if: startsWith(github.event.ref, 'refs/tags/v')
        